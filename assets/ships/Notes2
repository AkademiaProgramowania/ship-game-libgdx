W CardFactory:
w createCards:
spr czy w bazie danych są karty, jeśli nie ma to przyg. karty
String ifNotExist = "IF NOT EXISTS (SELECT * FROM cards);"; - jak to zrobić?

String type = "";
        String second_ship_type = "";
        int picture_index = 0;
        int storm_value = 0;
        String insertCard = "";

for (Card card : cards) {
             type = String.valueOf(card.getType());
             second_ship_type = card.getSecondShipType();
             picture_index = card.getPictureIndex();
             storm_value = card.getStormValue();

             insertCard = "INSERT INTO cards VALUES (0,"
                    + type + ","
                    + second_ship_type + ","
                    + picture_index + ","
                    + storm_value + ");";

        }

//każda karta z ArrayList jako insert do bazy danych
        // ver1 - ze statement
        // ver2 -  z preprare statement to lepiej
        // metoda nic nie zwraca


public List<Card> getCardsFromDatabase() {
        // select* from cards
        // wynik - ResultSet
        // przeglądanie ResultSet
        // wciągane informacji z każdej z kolumn, tworzenie obiektu Card i dodawanie do listy
        return null;
    }

// z arrayList do bazy danych zamiast return
// przygotuj bazę danych
// wyciągnij karty z bazy

// next - relacje tabeli


package ship.game.server;

import javax.security.auth.login.Configuration;
import java.sql.*;
import java.util.List;

public class JDBC {
    public static void main(String[] args) {
        CardFactory factory = new CardFactory();
        List<Card> cards = factory.createCards(); // lista kart do wstawienia do bazy danych

        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/ship_game", "root", "toor"); // user password to insert manually
            //Statement statement = connection.createStatement();
            PreparedStatement preparedStatement = null;
            //ResultSet resultSet = null;

            //ResultSet resultSet = statement.executeQuery("INSERT INTO players");

/*            String createTableCards = "CREATE TABLE cards (\n" +
                    "id INTEGER not null AUTO_INCREMENT,\n" +
                    "type VARCHAR(255),\n" +
                    "second_ship_type VARCHAR(255),\n" +
                    "picture_index INTEGER,\n" +
                    "storm_value INTEGER,\n" +
                    "PRIMARY KEY (id));\n";

            statement.executeUpdate(createTableCards);
            System.out.println("Table created");*/


            for (Card card : cards) {
                preparedStatement = connection.prepareStatement("INSERT INTO cards VALUES (0,?,?,?,?);");
                preparedStatement.setString(1, String.valueOf(card.getType()));
                preparedStatement.setString(2, card.getSecondShipType());
                preparedStatement.setInt(3, card.getPictureIndex());
                preparedStatement.setInt(4, card.getStormValue());

            }
            assert preparedStatement != null;
            preparedStatement.executeQuery();
            connection.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
// jeśli ich tam jeszcze nie ma: (if exist)
// tworzyć tabelę
// CardFactory ma dodawać karty do bazy



   /* String sql = "CREATE TABLE GamePlayers" +
            "(id INTEGER not null," +
            "player INTEGER," + // playerNum
            "cards VARCHAR(255)," + // lista obiektów
            "mainStack VARCHAR(255)," + // lista obiektów
            "temporaryStack VARCHAR(255)," + // lista obiektów
            "lastPlayer VARCHAR(255)," + // tak/nie - czy dany player był ostatni albo coś podobnego
            "PRIMARY KEY(id))";*/